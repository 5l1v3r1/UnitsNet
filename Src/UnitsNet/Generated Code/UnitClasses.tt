<#@ template debug="True" language="C#" hostspecific="True" #>
<# // Load types in current assembly. #>
<#@ assembly name="$(TargetPath)" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="Includes\UnitClass.ttinclude" once="true"#>
<# 
// This causes a duplicate definition error because UnitClass.ttinclude also includes it: 
// @ include file="MultipleOutputHelper.ttinclude" once="true" #>
<# // Disable output of this file, note this causes a build warning #>
<#@ output extension="/" #>
<#//@ output extension=".cs" #> 
<# 
    
    var m = Manager.Create(Host, GenerationEnvironment);

    List<UnitAttribute> unitAttributes = GetUnitAttributeImplementations();

    foreach (UnitAttribute attr in unitAttributes)
    {
        Type unitAttributeType = attr.GetType();
        string unitClassName = unitAttributeType.Name.Replace("Attribute", string.Empty);
        GenerateUnitClass(unitAttributeType, m, unitClassName, attr.BaseUnit, attr.XmlDocSummary);
    }
    
    m.Process(split: true);
#>
<#+
#>